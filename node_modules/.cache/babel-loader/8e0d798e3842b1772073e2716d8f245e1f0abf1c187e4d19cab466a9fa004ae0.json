{"ast":null,"code":"import axios from 'axios';\nimport './generalfleet.css';\nexport default {\n  name: 'GeneralFleet',\n  data() {\n    return {\n      users: [],\n      searchQuery: \"\",\n      // Добавленное свойство для хранения запроса поиска\n      showModal: false,\n      // Добавленное свойство для отображения модального окна\n      selectedUser: null,\n      // Добавленное свойство для хранения выбранного пользователя\n      currentPage: 1,\n      // Текущая страница\n      usersPerPage: 10 // Пользователей на странице\n    };\n  },\n  computed: {\n    filteredUsers() {\n      // Приводим поисковой запрос к нижнему регистру для нечувствительного к регистру сравнения\n      const query = this.searchQuery.toLowerCase();\n      // Фильтруем пользователей по имени, если оно содержит поисковой запрос\n      return this.users.filter(user => user.name.toLowerCase().includes(query));\n    },\n    // Вычисляемое свойство, чтобы вычислить индекс первого пользователя на текущей странице\n    startIndex() {\n      return (this.currentPage - 1) * this.usersPerPage;\n    },\n    // Вычисляемое свойство, чтобы получить пользователей для текущей страницы\n    paginatedUsers() {\n      return this.filteredUsers.slice(this.startIndex, this.startIndex + this.usersPerPage);\n    },\n    // Вычисляемое свойство, чтобы определить общее количество страниц\n    totalPages() {\n      return Math.ceil(this.filteredUsers.length / this.usersPerPage);\n    }\n  },\n  mounted() {\n    this.fetchUsers();\n  },\n  methods: {\n    async fetchUsers() {\n      try {\n        const response = await axios.get('https://jsonplaceholder.typicode.com/users');\n        this.users = response.data;\n      } catch (error) {\n        console.error('Ошибка при получении данных пользователей:', error);\n      }\n    },\n    filterContent() {\n      // Обновляем отображаемых пользователей при изменении поискового запроса\n      this.filteredUsers = this.users.filter(user => user.name.toLowerCase().includes(this.searchQuery.toLowerCase()));\n    },\n    openModal(user) {\n      this.selectedUser = user;\n      this.showModal = true;\n    },\n    closeModal() {\n      this.showModal = false;\n      this.selectedUser = null;\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","users","searchQuery","showModal","selectedUser","currentPage","usersPerPage","computed","filteredUsers","query","toLowerCase","filter","user","includes","startIndex","paginatedUsers","slice","totalPages","Math","ceil","length","mounted","fetchUsers","methods","response","get","error","console","filterContent","openModal","closeModal"],"sources":["/Users/neferuz/Desktop/ImellsAdmin/src/components/Fleet/GeneralFleet.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"analizing\">\r\n      <h1>Авто парк</h1>\r\n      <div class=\"poisk-con\">\r\n        <input v-model=\"searchQuery\" placeholder=\"Поиск\" type=\"text\">\r\n        <img src=\"@/assets/notifications_none.svg\" alt=\"\">\r\n        <img src=\"@/assets/moon-solid 1.svg\" alt=\"\">\r\n        <img src=\"@/assets/info_outline.svg\" alt=\"\">\r\n        <img class=\"admin-logo\" src=\"https://splendorous-granita-f826c7.netlify.app/fozil.svg\" alt=\"\">\r\n      </div>\r\n    </div>\r\n    <div class=\"user-content\">\r\n      <table class=\"user-table\" v-if=\"paginatedUsers.length\">\r\n        <thead>\r\n          <tr>\r\n            <th>Юзер</th>\r\n            <th>Общее количество поездок</th>\r\n            <th>Всего завершено</th>\r\n            <th>Город проживания</th>\r\n            <th>Место работы</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"user in paginatedUsers\" :key=\"user.id\" @click=\"openModal(user)\">\r\n            <td>{{ user.name }}</td>\r\n            <td>{{ user.totalTrips }}</td>\r\n            <td>{{ user.completedTrips }}</td>\r\n            <td>{{ user.city }}</td>\r\n            <td>{{ user.workplace }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <p v-else>Загрузка данных...</p>\r\n    </div>\r\n    <div class=\"pagination\">\r\n      <button @click=\"currentPage--\" :disabled=\"currentPage === 1\">&lt;</button>\r\n      <button v-for=\"page in totalPages\" :key=\"page\" :class=\"{ active: currentPage === page }\" @click=\"currentPage = page\">\r\n        {{ page }}\r\n      </button>\r\n      <button @click=\"currentPage++\" :disabled=\"currentPage === totalPages\">&gt;</button>\r\n    </div>\r\n    <div v-if=\"showModal\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <span class=\"close\" @click=\"closeModal\">&times;</span>\r\n        <h2>Информация о пользователе</h2>\r\n        <p><strong>Юзер:</strong> {{ selectedUser.name }}</p>\r\n        <p><strong>Общее количество поездок:</strong> {{ selectedUser.totalTrips }}</p>\r\n        <p><strong>Всего завершено:</strong> {{ selectedUser.completedTrips }}</p>\r\n        <p><strong>Город проживания:</strong> {{ selectedUser.city }}</p>\r\n        <p><strong>Место работы:</strong> {{ selectedUser.workplace }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport './generalfleet.css';\r\n\r\nexport default {\r\n  name: 'GeneralFleet',\r\n  data() {\r\n    return {\r\n      users: [],\r\n      searchQuery: \"\", // Добавленное свойство для хранения запроса поиска\r\n      showModal: false, // Добавленное свойство для отображения модального окна\r\n      selectedUser: null, // Добавленное свойство для хранения выбранного пользователя\r\n      currentPage: 1, // Текущая страница\r\n      usersPerPage: 10 // Пользователей на странице\r\n    };\r\n  },\r\n  computed: {\r\n    filteredUsers() {\r\n      // Приводим поисковой запрос к нижнему регистру для нечувствительного к регистру сравнения\r\n      const query = this.searchQuery.toLowerCase();\r\n      // Фильтруем пользователей по имени, если оно содержит поисковой запрос\r\n      return this.users.filter(user => user.name.toLowerCase().includes(query));\r\n    },\r\n    // Вычисляемое свойство, чтобы вычислить индекс первого пользователя на текущей странице\r\n    startIndex() {\r\n      return (this.currentPage - 1) * this.usersPerPage;\r\n    },\r\n    // Вычисляемое свойство, чтобы получить пользователей для текущей страницы\r\n    paginatedUsers() {\r\n      return this.filteredUsers.slice(this.startIndex, this.startIndex + this.usersPerPage);\r\n    },\r\n    // Вычисляемое свойство, чтобы определить общее количество страниц\r\n    totalPages() {\r\n      return Math.ceil(this.filteredUsers.length / this.usersPerPage);\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchUsers();\r\n  },\r\n  methods: {\r\n    async fetchUsers() {\r\n      try {\r\n        const response = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n        this.users = response.data;\r\n      } catch (error) {\r\n        console.error('Ошибка при получении данных пользователей:', error);\r\n      }\r\n    },\r\n    filterContent() {\r\n      // Обновляем отображаемых пользователей при изменении поискового запроса\r\n      this.filteredUsers = this.users.filter(user =>\r\n        user.name.toLowerCase().includes(this.searchQuery.toLowerCase())\r\n      );\r\n    },\r\n    openModal(user) {\r\n      this.selectedUser = user;\r\n      this.showModal = true;\r\n    },\r\n    closeModal() {\r\n      this.showModal = false;\r\n      this.selectedUser = null;\r\n    }\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AAyDA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAO,oBAAoB;AAE3B,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MAAE;MACjBC,SAAS,EAAE,KAAK;MAAE;MAClBC,YAAY,EAAE,IAAI;MAAE;MACpBC,WAAW,EAAE,CAAC;MAAE;MAChBC,YAAY,EAAE,EAAC,CAAE;IACnB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAAA,EAAG;MACd;MACA,MAAMC,KAAI,GAAI,IAAI,CAACP,WAAW,CAACQ,WAAW,CAAC,CAAC;MAC5C;MACA,OAAO,IAAI,CAACT,KAAK,CAACU,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACb,IAAI,CAACW,WAAW,CAAC,CAAC,CAACG,QAAQ,CAACJ,KAAK,CAAC,CAAC;IAC3E,CAAC;IACD;IACAK,UAAUA,CAAA,EAAG;MACX,OAAO,CAAC,IAAI,CAACT,WAAU,GAAI,CAAC,IAAI,IAAI,CAACC,YAAY;IACnD,CAAC;IACD;IACAS,cAAcA,CAAA,EAAG;MACf,OAAO,IAAI,CAACP,aAAa,CAACQ,KAAK,CAAC,IAAI,CAACF,UAAU,EAAE,IAAI,CAACA,UAAS,GAAI,IAAI,CAACR,YAAY,CAAC;IACvF,CAAC;IACD;IACAW,UAAUA,CAAA,EAAG;MACX,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACX,aAAa,CAACY,MAAK,GAAI,IAAI,CAACd,YAAY,CAAC;IACjE;EACF,CAAC;EACDe,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,UAAU,CAAC,CAAC;EACnB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAME,QAAO,GAAI,MAAM1B,KAAK,CAAC2B,GAAG,CAAC,4CAA4C,CAAC;QAC9E,IAAI,CAACxB,KAAI,GAAIuB,QAAQ,CAACxB,IAAI;MAC5B,EAAE,OAAO0B,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;MACpE;IACF,CAAC;IACDE,aAAaA,CAAA,EAAG;MACd;MACA,IAAI,CAACpB,aAAY,GAAI,IAAI,CAACP,KAAK,CAACU,MAAM,CAACC,IAAG,IACxCA,IAAI,CAACb,IAAI,CAACW,WAAW,CAAC,CAAC,CAACG,QAAQ,CAAC,IAAI,CAACX,WAAW,CAACQ,WAAW,CAAC,CAAC,CACjE,CAAC;IACH,CAAC;IACDmB,SAASA,CAACjB,IAAI,EAAE;MACd,IAAI,CAACR,YAAW,GAAIQ,IAAI;MACxB,IAAI,CAACT,SAAQ,GAAI,IAAI;IACvB,CAAC;IACD2B,UAAUA,CAAA,EAAG;MACX,IAAI,CAAC3B,SAAQ,GAAI,KAAK;MACtB,IAAI,CAACC,YAAW,GAAI,IAAI;IAC1B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}