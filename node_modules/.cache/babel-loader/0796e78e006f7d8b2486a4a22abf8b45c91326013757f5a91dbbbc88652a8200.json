{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport router from '@/router';\nimport './userscomponent.css';\nexport default {\n  name: 'UsersComponent',\n  data() {\n    return {\n      users: [],\n      searchQuery: \"\",\n      currentPage: 1,\n      pageSize: 10,\n      // Количество пользователей на странице\n      showModal: false,\n      selectedUser: null\n    };\n  },\n  computed: {\n    filteredUsers() {\n      const query = this.searchQuery.toLowerCase();\n      return this.users.filter(user => user.name.toLowerCase().includes(query)); // Используйте fio вместо name\n    },\n    totalPages() {\n      return Math.ceil(this.filteredUsers.length / this.pageSize);\n    },\n    paginatedUsers() {\n      const startIndex = (this.currentPage - 1) * this.pageSize;\n      const endIndex = startIndex + this.pageSize;\n      return this.filteredUsers.slice(startIndex, endIndex);\n    }\n  },\n  mounted() {\n    this.fetchUsers();\n  },\n  methods: {\n    async fetchUsers() {\n      try {\n        const response = await axios.get('http://imells.uz:8000/users/api/get_all_users');\n        const usersData = response.data.users; // Обратите внимание на users здесь\n\n        this.users = usersData.map(user => ({\n          id: user.id,\n          name: user.fio,\n          // Используйте fio вместо name\n          email: user.username,\n          // Используйте username вместо email\n          phoneNumber: user.phone_number,\n          // Используйте phone_number вместо phoneNumber\n          status: user.status // Убедитесь, что у вас есть статус пользователя\n        }));\n      } catch (error) {\n        console.error('Ошибка при получении данных пользователей:', error);\n      }\n    },\n    openUserDetailsPage(userId) {\n      router.push({\n        name: 'user-details',\n        params: {\n          id: userId\n        }\n      });\n    },\n    previousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    changePage(pageNumber) {\n      this.currentPage = pageNumber;\n    },\n    openModal(userId) {\n      this.selectedUser = this.users.find(user => user.id === userId);\n      this.showModal = true;\n    },\n    closeModal() {\n      this.selectedUser = null;\n      this.showModal = false;\n    }\n  }\n};","map":{"version":3,"names":["axios","router","name","data","users","searchQuery","currentPage","pageSize","showModal","selectedUser","computed","filteredUsers","query","toLowerCase","filter","user","includes","totalPages","Math","ceil","length","paginatedUsers","startIndex","endIndex","slice","mounted","fetchUsers","methods","response","get","usersData","map","id","fio","email","username","phoneNumber","phone_number","status","error","console","openUserDetailsPage","userId","push","params","previousPage","nextPage","changePage","pageNumber","openModal","find","closeModal"],"sources":["/Users/neferuz/Desktop/ImellsAdmin/src/components/user/UsersComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"analizing\">\r\n      <h1>Все пользователи</h1>\r\n      <div class=\"poisk-con\">\r\n        <input v-model=\"searchQuery\" placeholder=\"Поиск\" type=\"text\">\r\n        <img src=\"@/assets/notifications_none.svg\" alt=\"\">\r\n        <img src=\"@/assets/moon-solid 1.svg\" alt=\"\">\r\n        <img src=\"@/assets/info_outline.svg\" alt=\"\">\r\n        <img class=\"admin-logo\" src=\"https://splendorous-granita-f826c7.netlify.app/fozil.svg\" alt=\"\">\r\n      </div>\r\n    </div>\r\n    <div class=\"user-content\">\r\n      <table class=\"user-table\" v-if=\"filteredUsers.length\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Юзер</th>\r\n            <th>Имя</th>\r\n            <th>Номер телефона</th>\r\n            <th>Статус</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"user in paginatedUsers\" :key=\"user.id\" @click=\"openUserDetailsPage(user.id)\">\r\n            <td>{{ user.id }}</td>\r\n            <td>{{ user.name }}</td>\r\n            <td>{{ user.email }}</td>\r\n            <td>{{ user.phoneNumber }}</td>\r\n            <td>{{ user.status }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <p v-else>Загрузка данных...</p>\r\n    </div>\r\n    <div class=\"pagination\">\r\n      <button @click=\"previousPage\">&lt;</button>\r\n      <button v-for=\"pageNumber in totalPages\" :key=\"pageNumber\" :class=\"{ active: currentPage === pageNumber }\" @click=\"changePage(pageNumber)\">\r\n        {{ pageNumber }}\r\n      </button>\r\n      <button @click=\"nextPage\">&gt;</button>\r\n    </div>\r\n    <div v-if=\"showModal\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <span class=\"close\" @click=\"closeModal\">&times;</span>\r\n        <h2>Информация о пользователе</h2>\r\n        <p><strong>ID:</strong> {{ selectedUser.id }}</p>\r\n        <p><strong>Юзер:</strong> {{ selectedUser.name }}</p>\r\n        <p><strong>Имя:</strong> {{ selectedUser.email }}</p>\r\n        <p><strong>Номер телефона:</strong> {{ selectedUser.phoneNumber }}</p>\r\n        <p><strong>Статус:</strong> {{ selectedUser.status }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport router from '@/router';\r\nimport './userscomponent.css';\r\n\r\nexport default {\r\n  name: 'UsersComponent',\r\n  data() {\r\n    return {\r\n      users: [],\r\n      searchQuery: \"\",\r\n      currentPage: 1,\r\n      pageSize: 10, // Количество пользователей на странице\r\n      showModal: false,\r\n      selectedUser: null\r\n    };\r\n  },\r\n  computed: {\r\n    filteredUsers() {\r\n      const query = this.searchQuery.toLowerCase();\r\n      return this.users.filter(user => user.name.toLowerCase().includes(query)); // Используйте fio вместо name\r\n    },\r\n    totalPages() {\r\n      return Math.ceil(this.filteredUsers.length / this.pageSize);\r\n    },\r\n    paginatedUsers() {\r\n      const startIndex = (this.currentPage - 1) * this.pageSize;\r\n      const endIndex = startIndex + this.pageSize;\r\n      return this.filteredUsers.slice(startIndex, endIndex);\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchUsers();\r\n  },\r\n  methods: {\r\n    async fetchUsers() {\r\n      try {\r\n        const response = await axios.get('http://imells.uz:8000/users/api/get_all_users');\r\n        const usersData = response.data.users; // Обратите внимание на users здесь\r\n\r\n        this.users = usersData.map(user => ({\r\n          id: user.id,\r\n          name: user.fio, // Используйте fio вместо name\r\n          email: user.username, // Используйте username вместо email\r\n          phoneNumber: user.phone_number, // Используйте phone_number вместо phoneNumber\r\n          status: user.status // Убедитесь, что у вас есть статус пользователя\r\n        }));\r\n      } catch (error) {\r\n        console.error('Ошибка при получении данных пользователей:', error);\r\n      }\r\n    },\r\n    openUserDetailsPage(userId) {\r\n      router.push({ name: 'user-details', params: { id: userId } });\r\n    },\r\n    previousPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n      }\r\n    },\r\n    changePage(pageNumber) {\r\n      this.currentPage = pageNumber;\r\n    },\r\n    openModal(userId) {\r\n      this.selectedUser = this.users.find(user => user.id === userId);\r\n      this.showModal = true;\r\n    },\r\n    closeModal() {\r\n      this.selectedUser = null;\r\n      this.showModal = false;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n"],"mappings":";AAyDA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,MAAK,MAAO,UAAU;AAC7B,OAAO,sBAAsB;AAE7B,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,WAAW,EAAE,CAAC;MACdC,QAAQ,EAAE,EAAE;MAAE;MACdC,SAAS,EAAE,KAAK;MAChBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAAA,EAAG;MACd,MAAMC,KAAI,GAAI,IAAI,CAACP,WAAW,CAACQ,WAAW,CAAC,CAAC;MAC5C,OAAO,IAAI,CAACT,KAAK,CAACU,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACb,IAAI,CAACW,WAAW,CAAC,CAAC,CAACG,QAAQ,CAACJ,KAAK,CAAC,CAAC,EAAE;IAC7E,CAAC;IACDK,UAAUA,CAAA,EAAG;MACX,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACR,aAAa,CAACS,MAAK,GAAI,IAAI,CAACb,QAAQ,CAAC;IAC7D,CAAC;IACDc,cAAcA,CAAA,EAAG;MACf,MAAMC,UAAS,GAAI,CAAC,IAAI,CAAChB,WAAU,GAAI,CAAC,IAAI,IAAI,CAACC,QAAQ;MACzD,MAAMgB,QAAO,GAAID,UAAS,GAAI,IAAI,CAACf,QAAQ;MAC3C,OAAO,IAAI,CAACI,aAAa,CAACa,KAAK,CAACF,UAAU,EAAEC,QAAQ,CAAC;IACvD;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,UAAU,CAAC,CAAC;EACnB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAME,QAAO,GAAI,MAAM5B,KAAK,CAAC6B,GAAG,CAAC,+CAA+C,CAAC;QACjF,MAAMC,SAAQ,GAAIF,QAAQ,CAACzB,IAAI,CAACC,KAAK,EAAE;;QAEvC,IAAI,CAACA,KAAI,GAAI0B,SAAS,CAACC,GAAG,CAAChB,IAAG,KAAM;UAClCiB,EAAE,EAAEjB,IAAI,CAACiB,EAAE;UACX9B,IAAI,EAAEa,IAAI,CAACkB,GAAG;UAAE;UAChBC,KAAK,EAAEnB,IAAI,CAACoB,QAAQ;UAAE;UACtBC,WAAW,EAAErB,IAAI,CAACsB,YAAY;UAAE;UAChCC,MAAM,EAAEvB,IAAI,CAACuB,MAAK,CAAE;QACtB,CAAC,CAAC,CAAC;MACL,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;MACpE;IACF,CAAC;IACDE,mBAAmBA,CAACC,MAAM,EAAE;MAC1BzC,MAAM,CAAC0C,IAAI,CAAC;QAAEzC,IAAI,EAAE,cAAc;QAAE0C,MAAM,EAAE;UAAEZ,EAAE,EAAEU;QAAO;MAAE,CAAC,CAAC;IAC/D,CAAC;IACDG,YAAYA,CAAA,EAAG;MACb,IAAI,IAAI,CAACvC,WAAU,GAAI,CAAC,EAAE;QACxB,IAAI,CAACA,WAAW,EAAE;MACpB;IACF,CAAC;IACDwC,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACxC,WAAU,GAAI,IAAI,CAACW,UAAU,EAAE;QACtC,IAAI,CAACX,WAAW,EAAE;MACpB;IACF,CAAC;IACDyC,UAAUA,CAACC,UAAU,EAAE;MACrB,IAAI,CAAC1C,WAAU,GAAI0C,UAAU;IAC/B,CAAC;IACDC,SAASA,CAACP,MAAM,EAAE;MAChB,IAAI,CAACjC,YAAW,GAAI,IAAI,CAACL,KAAK,CAAC8C,IAAI,CAACnC,IAAG,IAAKA,IAAI,CAACiB,EAAC,KAAMU,MAAM,CAAC;MAC/D,IAAI,CAAClC,SAAQ,GAAI,IAAI;IACvB,CAAC;IACD2C,UAAUA,CAAA,EAAG;MACX,IAAI,CAAC1C,YAAW,GAAI,IAAI;MACxB,IAAI,CAACD,SAAQ,GAAI,KAAK;IACxB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}