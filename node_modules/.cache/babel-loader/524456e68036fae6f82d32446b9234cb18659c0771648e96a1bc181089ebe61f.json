{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"up-con\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Настройки\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"settings\"\n};\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.addAdmin && _ctx.addAdmin(...args))\n  }, \"Добавить администратора\")]), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.settings, (setting, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"section\",\n      key: index\n    }, [_createElementVNode(\"h2\", null, _toDisplayString(setting.title), 1 /* TEXT */), setting.description ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, _toDisplayString(setting.description), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(setting.buttons, (button, buttonIndex) => {\n      return _openBlock(), _createElementBlock(\"button\", {\n        key: buttonIndex,\n        onClick: button.action\n      }, _toDisplayString(button.label), 9 /* TEXT, PROPS */, _hoisted_6);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","onClick","_cache","args","_ctx","addAdmin","_hoisted_4","_Fragment","_renderList","$data","settings","setting","index","_toDisplayString","title","description","_hoisted_5","_createCommentVNode","buttons","button","buttonIndex","action","label","_hoisted_6"],"sources":["/Users/neferuz/Desktop/ImellsAdmin/src/components/Settings/GeneralSettings.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"up-con\">\r\n        <h1>Настройки</h1>\r\n        <button @click=\"addAdmin\">Добавить администратора</button>\r\n      </div>\r\n    <div class=\"settings\">\r\n      <div class=\"section\" v-for=\"(setting, index) in settings\" :key=\"index\">\r\n        <h2>{{ setting.title }}</h2>\r\n        <p v-if=\"setting.description\">{{ setting.description }}</p>\r\n        <button v-for=\"(button, buttonIndex) in setting.buttons\" :key=\"buttonIndex\" @click=\"button.action\">{{ button.label }}</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport './generalsettings.css';\r\nexport default {\r\n  name: 'GeneralSettings',\r\n  data() {\r\n    return {\r\n      settings: [\r\n        {\r\n          title: 'Управление пользователями',\r\n          buttons: [\r\n            { label: 'Управление пользователями', action: this.openUserManagement },\r\n            { label: 'Управление ролями и правами доступа', action: this.manageRoles }\r\n          ]\r\n        },\r\n        {\r\n          title: 'Настройки безопасности',\r\n          buttons: [\r\n            { label: 'Настройки безопасности', action: this.openSecuritySettings },\r\n            { label: 'Настройки почты и уведомлений', action: this.configureEmail }\r\n          ]\r\n        },\r\n        {\r\n          title: 'Мониторинг и журнал действий',\r\n          buttons: [\r\n            { label: 'Просмотр журнала действий', action: this.viewLogs }\r\n          ]\r\n        },\r\n        {\r\n          title: 'Настройки подписки и платежей',\r\n          description: 'Управление вашей подпиской и платежными методами.',\r\n          buttons: [\r\n            { label: 'Управление подпиской', action: this.manageSubscription },\r\n            { label: 'Управление платежными методами', action: this.managePaymentMethods }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  },\r\n  methods: {\r\n    openUserManagement() {\r\n      // Логика для открытия управления пользователями\r\n    },\r\n    manageRoles() {\r\n      // Логика для управления ролями и правами доступа\r\n    },\r\n    openSecuritySettings() {\r\n      // Логика для открытия настроек безопасности\r\n    },\r\n    configureEmail() {\r\n      // Логика для настройки почты и уведомлений\r\n    },\r\n    viewLogs() {\r\n      // Логика для просмотра журнала действий\r\n    },\r\n    manageSubscription() {\r\n      // Логика для управления подпиской\r\n    },\r\n    managePaymentMethods() {\r\n      // Логика для управления платежными методами\r\n    }\r\n  }\r\n}\r\n</script>"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAQ;gCACfC,mBAAA,CAAkB,YAAd,WAAS;;EAGZD,KAAK,EAAC;AAAU;;EANzBE,GAAA;AAAA;mBAAA;;uBACEC,mBAAA,CAYM,OAZNC,UAYM,GAXJH,mBAAA,CAGQ,OAHRI,UAGQ,GAFJC,UAAkB,EAClBL,mBAAA,CAA0D;IAAjDM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,QAAA,IAAAD,IAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;KAAE,yBAAuB,E,GAErDR,mBAAA,CAMM,OANNW,UAMM,I,kBALJT,mBAAA,CAIMU,SAAA,QAXZC,WAAA,CAOsDC,KAAA,CAAAC,QAAQ,EAP9D,CAOmCC,OAAO,EAAEC,KAAK;yBAA3Cf,mBAAA,CAIM;MAJDH,KAAK,EAAC,SAAS;MAAuCE,GAAG,EAAEgB;QAC9DjB,mBAAA,CAA4B,YAAAkB,gBAAA,CAArBF,OAAO,CAACG,KAAK,kBACXH,OAAO,CAACI,WAAW,I,cAA5BlB,mBAAA,CAA2D,KATnEmB,UAAA,EAAAH,gBAAA,CASyCF,OAAO,CAACI,WAAW,oBAT5DE,mBAAA,iB,kBAUQpB,mBAAA,CAA8HU,SAAA,QAVtIC,WAAA,CAUgDG,OAAO,CAACO,OAAO,EAV/D,CAUwBC,MAAM,EAAEC,WAAW;2BAAnCvB,mBAAA,CAA8H;QAApED,GAAG,EAAEwB,WAAW;QAAGnB,OAAK,EAAEkB,MAAM,CAACE;0BAAWF,MAAM,CAACG,KAAK,wBAV1HC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}