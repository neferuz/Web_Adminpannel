{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-b2c3e190\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"chat_cod\"\n};\nconst _hoisted_3 = {\n  class: \"phone\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  class: \"messages\"\n};\nconst _hoisted_6 = {\n  class: \"send_whrite\"\n};\nconst _hoisted_7 = {\n  class: \"hot_responses\"\n};\nconst _hoisted_8 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    class: \"go-back\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.goBack && $options.goBack(...args))\n  }, \"Назад\"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [$data.user ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"h3\", null, \"Чат с \" + _toDisplayString($data.user.fullName), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.messages, message => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: message.id,\n      class: \"message\"\n    }, [_createElementVNode(\"span\", null, _toDisplayString(message.sender) + \": \", 1 /* TEXT */), _createTextVNode(_toDisplayString(message.text), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_6, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newMessage = $event),\n    onKeyup: _cache[2] || (_cache[2] = _withKeys((...args) => $options.sendMessage && $options.sendMessage(...args), [\"enter\"])),\n    placeholder: \"Введите сообщение\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.newMessage]]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.sendMessage && $options.sendMessage(...args))\n  }, \"Отправить\")])])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.hotResponses, response => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: response.id,\n      onClick: $event => $options.addHotResponse(response.text)\n    }, _toDisplayString(response.text), 9 /* TEXT, PROPS */, _hoisted_8);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","onClick","_cache","args","$options","goBack","_hoisted_2","_hoisted_3","$data","user","_hoisted_4","_toDisplayString","fullName","_hoisted_5","_Fragment","_renderList","messages","message","id","sender","_createTextVNode","text","_hoisted_6","$event","newMessage","onKeyup","_withKeys","sendMessage","placeholder","_createCommentVNode","_hoisted_7","hotResponses","response","addHotResponse","_hoisted_8"],"sources":["/Users/neferuz/Desktop/ImellsAdmin/src/components/views/PageChat.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <button class=\"go-back\" @click=\"goBack\">Назад</button>\r\n        <div class=\"chat_cod\">\r\n            <div class=\"phone\">\r\n                <div v-if=\"user\">\r\n                    <h3>Чат с {{ user.fullName }}</h3>\r\n                    <div class=\"messages\">\r\n                        <div v-for=\"message in messages\" :key=\"message.id\" class=\"message\">\r\n                            <span>{{ message.sender }}: </span>{{ message.text }}\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"send_whrite\">\r\n                        <input v-model=\"newMessage\" @keyup.enter=\"sendMessage\" placeholder=\"Введите сообщение\" />\r\n                        <button @click=\"sendMessage\">Отправить</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"hot_responses\">\r\n                <button v-for=\"response in hotResponses\" :key=\"response.id\" @click=\"addHotResponse(response.text)\">{{\r\n            response.text }}</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'PageChat',\r\n    data() {\r\n        return {\r\n            user: null,\r\n            messages: [],\r\n            newMessage: '',\r\n            hotResponses: [\r\n                { id: 1, text: 'Спасибо!' },\r\n                { id: 2, text: 'Принято!' },\r\n                { id: 3, text: 'Хорошо!' },\r\n                // Добавьте здесь другие готовые ответы по вашему выбору\r\n            ]\r\n        };\r\n    },\r\n    created() {\r\n        const userId = this.$route.params.id;\r\n        this.loadUserData(userId);\r\n\r\n        // Загрузка сообщений из localStorage при создании компонента\r\n        const storageKey = `chatMessages-${userId}`;\r\n        const storedMessages = localStorage.getItem(storageKey);\r\n        if (storedMessages) {\r\n            this.messages = JSON.parse(storedMessages);\r\n        }\r\n    },\r\n    methods: {\r\n        async loadUserData(userId) {\r\n            try {\r\n                const userResponse = await fetch(`https://jsonplaceholder.typicode.com/users/${userId}`);\r\n                const userData = await userResponse.json();\r\n                this.user = {\r\n                    id: userData.id,\r\n                    fullName: userData.name,\r\n                    complaint: userData.complaint\r\n                };\r\n\r\n                const messagesResponse = await fetch(`API_URL/messages/${userId}`);\r\n                const messagesData = await messagesResponse.json();\r\n                this.messages = messagesData.map(message => ({\r\n                    id: message.id,\r\n                    sender: message.sender,\r\n                    text: message.text\r\n                }));\r\n            } catch (error) {\r\n                console.error('Ошибка при загрузке данных пользователя или сообщений:', error);\r\n            }\r\n        },\r\n        sendMessage() {\r\n            if (this.newMessage.trim() !== '') {\r\n                const newMessage = { id: Date.now(), sender: 'Вы', text: this.newMessage };\r\n                this.messages.push(newMessage);\r\n                this.newMessage = '';\r\n\r\n                // Сохранение сообщений только для текущего пользователя\r\n                const storageKey = `chatMessages-${this.user.id}`;\r\n                localStorage.setItem(storageKey, JSON.stringify(this.messages));\r\n\r\n                // Дополнительно отправляем сообщение на сервер через API\r\n            }\r\n        },\r\n        addHotResponse(response) {\r\n            this.newMessage += response + ' ';\r\n        },\r\n        goBack() {\r\n            this.$router.go(-1);\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.messages {\r\n    max-height: 200px;\r\n    overflow-y: auto;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.message {\r\n    margin-bottom: 5px;\r\n}\r\n\r\ninput {\r\n    width: calc(100% - 22px);\r\n    padding: 10px;\r\n    margin-right: 10px;\r\n}\r\n\r\nbutton {\r\n    padding: 10px;\r\n}\r\n\r\n.chat_cod {\r\n    display: grid;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n.chat_cod h3 {\r\n    text-align: center;\r\n}\r\n\r\n.send_whrite {\r\n    display: flex;\r\n    position: absolute;\r\n    justify-content: center;\r\n    bottom: 0;\r\n    width: 95%;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.send_whrite input {\r\n    border-radius: 10px;\r\n    border: 0.1 solid rgb(233, 230, 230);\r\n}\r\n.send_whrite button{\r\n    border-radius: 10px;\r\n    background-color: #3366FF;\r\n    color: #FFFFFF;\r\n\r\n}\r\n.hot_responses {\r\n    margin-top: 10px;\r\n}\r\n\r\n.hot_responses button {\r\n    margin-right: 5px;\r\n    margin-bottom: 5px;\r\n    border-radius: 10px;\r\n    background-color: #FFFFFF;\r\n    cursor: pointer;\r\n}\r\n\r\n.phone {\r\n    position: relative;\r\n    /* Необходимо для позиционирования абсолютного элемента внутри него */\r\n    border: 1px solid;\r\n    width: 350px;\r\n    padding: 10px;\r\n    height: 70vh;\r\n    display: grid;\r\n    border-radius: 10px;\r\n}\r\n</style>\r\n"],"mappings":";;;EACSA,KAAK,EAAC;AAAW;;EAEbA,KAAK,EAAC;AAAU;;EACZA,KAAK,EAAC;AAAO;;EAJ9BC,GAAA;AAAA;;EAOyBD,KAAK,EAAC;AAAU;;EAKhBA,KAAK,EAAC;AAAa;;EAM3BA,KAAK,EAAC;AAAe;mBAlBtC;;uBACIE,mBAAA,CAsBM,OAtBNC,UAsBM,GArBFC,mBAAA,CAAsD;IAA9CJ,KAAK,EAAC,SAAS;IAAEK,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,MAAA,IAAAD,QAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;KAAE,OAAK,GAC7CH,mBAAA,CAmBM,OAnBNM,UAmBM,GAlBFN,mBAAA,CAaM,OAbNO,UAaM,GAZSC,KAAA,CAAAC,IAAI,I,cAAfX,mBAAA,CAWM,OAhBtBY,UAAA,GAMoBV,mBAAA,CAAkC,YAA9B,QAAM,GAAAW,gBAAA,CAAGH,KAAA,CAAAC,IAAI,CAACG,QAAQ,kBAC1BZ,mBAAA,CAIM,OAJNa,UAIM,I,kBAHFf,mBAAA,CAEMgB,SAAA,QAV9BC,WAAA,CAQ+CP,KAAA,CAAAQ,QAAQ,EAAnBC,OAAO;yBAAnBnB,mBAAA,CAEM;MAF4BD,GAAG,EAAEoB,OAAO,CAACC,EAAE;MAAEtB,KAAK,EAAC;QACrDI,mBAAA,CAAmC,cAAAW,gBAAA,CAA1BM,OAAO,CAACE,MAAM,IAAG,IAAE,iBATxDC,gBAAA,CAAAT,gBAAA,CASkEM,OAAO,CAACI,IAAI,iB;oCAG1DrB,mBAAA,CAGM,OAHNsB,UAGM,G,gBAFFtB,mBAAA,CAAyF;IAbjH,uBAAAE,MAAA,QAAAA,MAAA,MAAAqB,MAAA,IAawCf,KAAA,CAAAgB,UAAU,GAAAD,MAAA;IAAGE,OAAK,EAAAvB,MAAA,QAAAA,MAAA,MAb1DwB,SAAA,KAAAvB,IAAA,KAakEC,QAAA,CAAAuB,WAAA,IAAAvB,QAAA,CAAAuB,WAAA,IAAAxB,IAAA,CAAW;IAAEyB,WAAW,EAAC;iEAAnDpB,KAAA,CAAAgB,UAAU,E,GAC1BxB,mBAAA,CAA+C;IAAtCC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAuB,WAAA,IAAAvB,QAAA,CAAAuB,WAAA,IAAAxB,IAAA,CAAW;KAAE,WAAS,E,OAd9D0B,mBAAA,e,GAkBY7B,mBAAA,CAGM,OAHN8B,UAGM,I,kBAFFhC,mBAAA,CACqBgB,SAAA,QApBrCC,WAAA,CAmB2CP,KAAA,CAAAuB,YAAY,EAAxBC,QAAQ;yBAAvBlC,mBAAA,CACqB;MADqBD,GAAG,EAAEmC,QAAQ,CAACd,EAAE;MAAGjB,OAAK,EAAAsB,MAAA,IAAEnB,QAAA,CAAA6B,cAAc,CAACD,QAAQ,CAACX,IAAI;wBACpGW,QAAQ,CAACX,IAAI,wBApBzBa,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}